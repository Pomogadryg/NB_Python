"""
Blackjack (twenty-one) is a casino game played with cards. The goal of the game is to draw
cards that total as close to 21 points as possible without going over. All face cards count as
10 points, aces count as 1 or 11, and all other cards count their numeric value.
The game is played against a dealer. The player tries to get closer to 21 (without going over)
than the dealer. If the dealer busts (goes over 21), the player automatically wins (provided
the player had not already busted). The dealer must always take cards according to a fixed
set of rules. The dealer takes cards until he or she achieves a total of at least 17. If the dealerâ€™s
hand contains an ace, it will be counted as 11
"""

from tkinter import *
from tkinter import ttk
import random

global stack
stack = []
for i in ['Clubs # ', 'Diam. # ', 'Hearts # ', 'Spades # ']:
    for j in ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King', 'Ace']:
        stack.append(i + j)
global Player_stack
Player_stack = []
global Bank_stack
Bank_stack = []

global player_score
global bank_score
player_score = 0
bank_score = 0
global player_win
player_win = False
global bank_win
bank_win = False

global bank_pass
bank_pass = False

global player_pass
player_pass = False


def for_me(master):
    global stack
    global Player_stack
    global Bank_stack
    global player_score
    global player_win
    global bank_win

    label_player = Label(master, text='player')
    label_player.place(relx=0.88, rely=0.7, width=70, height=150)

    card = random.choice(stack)
    Player_stack.append(card)

    for i in range(len(Player_stack)):
        edit = Player_stack[i]
        edit = edit.split(' # ')
        Label(master, text=(edit[0] + '\n' * 3 + edit[1]), font=('Arial', 14)).place(relx=(2 + i) / 10, rely=0.7, width=70, height=150)

    edit2 = card
    edit2 = edit2.split(' # ')
    edit2 = edit2[1]
    if edit2 == '2' or edit2 == '3' or edit2 == '4' or edit2 == '5' or edit2 == '6' or edit2 == '7' or edit2 == '8' or edit2 == '9' or edit2 == '10':
        edit2 = eval(edit2)
        player_score = player_score + edit2
    elif edit2 == 'Jack' or edit2 == 'Queen' or edit2 == 'King' or edit2 == 'Ace':
        player_score = player_score + 10
    label_player.config(text=('Your score is\n' + str(player_score)))
    if player_score == 21:
        Label(master, text='You Win!', font=('Arial', 18)).place(relx=0.3, rely=0.4, width=400, height=100)
    elif player_score > 21:
        Label(master, text='You went over! Bank WIN!', font=('Arial', 18)).place(relx=0.3, rely=0.4, width=400, height=100)


def round(master):
    global stack
    global Player_stack
    global Bank_stack
    global bank_score
    global bank_win
    global player_win
    global bank_pass

    label_bank = Label(master, text='bank')
    label_bank.place(relx=0.88, rely=0.05, width=70, height=150)

    if bank_score <= 17:
        card = random.choice(stack)
        Bank_stack.append(card)

        for i in range(len(Bank_stack)):
            edit = Bank_stack[i]
            edit = edit.split(' # ')
            Label(master, text=(edit[0] + '\n' * 3 + edit[1]), font=('Arial', 14)).place(relx=(2 + i) / 10, rely=0.05, width=70, height=150)

        edit2 = card
        edit2 = edit2.split(' # ')
        edit2 = edit2[1]
        if edit2 == '2' or edit2 == '3' or edit2 == '4' or edit2 == '5' or edit2 == '6' or edit2 == '7' or edit2 == '8' or edit2 == '9' or edit2 == '10':
            edit2 = eval(edit2)
            bank_score = bank_score + edit2
        elif edit2 == 'Jack' or edit2 == 'Queen' or edit2 == 'King' or edit2 == 'Ace':
            bank_score = bank_score + 10
        label_bank.config(text=('Bank score is\n' + str(bank_score)))
        if bank_score == 21:
            Label(master, text='Bank Wins!', font=('Arial', 18)).place(relx=0.3, rely=0.4, width=400, height=100)
            bank_win = True
        elif bank_score > 21:
            Label(master, text='Bank went over! You WIN!', font=('Arial', 18)).place(relx=0.3, rely=0.4, width=400, height=100)
            player_win = True

    elif bank_score > 17:
        Label(master, text='Bank Pass!', font=('Arial', 18)).place(relx=0.3, rely=0.4, width=400, height=100)
        bank_pass = True


def clear(master):
    global stack
    stack = []
    for i in ['Clubs # ', 'Diam. # ', 'Hearts # ', 'Spades # ']:
        for j in ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King', 'Ace']:
            stack.append(i + j)
    global Player_stack
    Player_stack = []
    global Bank_stack
    Bank_stack = []

    global player_score
    global bank_score
    player_score = 0
    bank_score = 0
    global player_win
    player_win = False
    global bank_win
    bank_win = False
    main()


def Pass(master):
    global player_pass
    player_pass = True


def main():
    global player_win
    global bank_win
    root = Tk()
    root.geometry('800x600+400+100')
    root.resizable(False, False)
    main_fraim = Frame(root)
    main_fraim.pack(fill=BOTH, expand=True)
    main_fraim.config(background='bisque2')

    def Escape(event):
        root.destroy()

    root.bind('<Escape>', Escape)

    waiting_callback = IntVar()
    button_serve = Button(main_fraim, text='play', command=lambda: waiting_callback.set(1))
    button_serve.place(relx=0.01, rely=0.95)

    button_clear = Button(main_fraim, text='Start Over', command=lambda: clear(main_fraim))
    button_clear.place(relx=0.9, rely=0.95)

    button_pass = Button(main_fraim, text='Pass', command=lambda: Pass(main_fraim))
    button_pass.place(relx=0.17, rely=0.95)

    turn = 1
    while player_win == False and bank_win == False:
        if turn % 2 != 0 and player_pass == False and bank_pass == False:
            #Label(main_fraim, text='Are you playing?', font=('Arial', 18)).place(relx=0.3, rely=0.4, width=400, height=100)
            button_serve.wait_variable(waiting_callback)
            for_me(main_fraim)
            turn += 1

        elif turn % 2 == 0 and player_pass == False and bank_pass == False:
            round(main_fraim)
            turn += 1
        else:
            print('Pass')

    root.mainloop()


main()
